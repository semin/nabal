class AminoAcid < ActiveRecord::Base

  ZeroArray20 = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

  def self.array20(res)
    case res
    when /A/i then [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    when /C/i then [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    when /D/i then [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    when /E/i then [0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    when /F/i then [0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    when /G/i then [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    when /H/i then [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0]
    when /I/i then [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0]
    when /K/i then [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]
    when /L/i then [0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0]
    when /M/i then [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]
    when /N/i then [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0]
    when /P/i then [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0]
    when /Q/i then [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0]
    when /R/i then [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0]
    when /S/i then [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0]
    when /T/i then [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]
    when /V/i then [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]
    when /W/i then [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0]
    when /Y/i then [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
    else self.ZeroArray20
    end
  end

end
